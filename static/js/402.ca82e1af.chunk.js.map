{"version":3,"file":"static/js/402.ca82e1af.chunk.js","mappings":"sOAIMA,EAAsBC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4CAKpCC,GAAwBH,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,CAAiBK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wIAQzCI,EAAuBN,EAAAA,GAAAA,KAAWO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2HAQlCM,EAAYR,EAAAA,GAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6QACnBQ,EAAAA,EAAAA,OAAAA,MAMuBA,EAAAA,EAAAA,YAAAA,OAGAA,EAAAA,EAAAA,YAAAA,SAI5BC,EAAQX,EAAAA,GAAAA,MAAYY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,spBAWJQ,EAAAA,EAAAA,OAAAA,OACXA,EAAAA,EAAAA,OAAAA,MACuBA,EAAAA,EAAAA,YAAAA,OAOAA,EAAAA,EAAAA,YAAAA,QASrBA,EAAAA,EAAAA,OAAAA,MAGPG,EAAeb,EAAAA,GAAAA,OAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+aAQvBQ,EAAAA,EAAAA,OAAAA,MACWA,EAAAA,EAAAA,OAAAA,UACYA,EAAAA,EAAAA,YAAAA,OAKAA,EAAAA,EAAAA,YAAAA,S,kBC/EnBK,EAAmB,WAC9B,IAAAC,GAA8CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAO1C,OACEI,EAAAA,EAAAA,KAACvB,EAAmB,CAAAwB,UAClBD,EAAAA,EAAAA,KAACnB,EAAqB,CAAAoB,UAClBC,EAAAA,EAAAA,MAAClB,EAAoB,CAACmB,SART,YACjBC,EAAAA,EAAAA,IAAc,kBAAmBN,GACjCC,EAAmB,GACvB,EAKqDE,SAAA,EACzCD,EAAAA,EAAAA,KAACd,EAAS,CAACmB,IAAI,kBAAkB,aAAW,kBAAiBJ,SAAC,wEAC9DD,EAAAA,EAAAA,KAACX,EAAK,CAACiB,KAAK,OACRC,GAAG,kBACHC,KAAK,kBACLC,MAAOX,EACPY,YAAY,4HACZC,SAAU,SAAAC,GAAMb,EAAmBa,EAAEC,OAAOJ,MAAM,KACtDT,EAAAA,EAAAA,KAACT,EAAY,CAACe,KAAK,SAAS,aAAW,SAAQL,SAAC,mCAK9D,ECtBF,EANiB,WACf,OACFD,EAAAA,EAAAA,KAACP,EAAgB,GAEjB,C,sBCDA,SAASW,EAAcU,EAAYC,GACjC,IACEC,aAAaC,QAAQH,EAAYI,KAAKC,UAAUJ,GAGlD,CAFE,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,QAC3C,CACF,CAuBA,SAASC,EAAWT,GAClBE,aAAaO,WAAWT,EAC1B,C","sources":["components/AvtorizationForm/AvtorizationForm.styled.js","components/AvtorizationForm/AvtorizationForm.jsx","pages/AuthPage.jsx","services/localStorService.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { theme } from \"components/baseStyles/Variables.styled\";\nimport { Container } from \"components/baseStyles/CommonStyle.styled\";\n\nconst AvtorizationSection = styled.section`\n  display: flex;\n  width: 100%;\n`;\n\nconst AvtorizationContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 100vh;\n  padding: 10px;\n`;\nconst AvtorizationFormItem = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Titleline = styled.label`\n  color: ${theme.colors.black};\n  font-size: 22px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  text-align: center;\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    font-size: 32px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    font-size: 40px;\n  }\n`;\nconst Input = styled.input`\n  display: flex;\n  justify-content: center;\n  align-self: center;\n  min-height: 45px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  padding: 4px 8px;\n  font-size: 18px;\n  font-weight: 400;\n  border-radius: 6px;\n  border: 1px solid ${theme.colors.border};\n  color: ${theme.colors.black};\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    min-width: 432px;\n    min-height: 65px;\n    font-size: 28px;\n    margin-top: 60px;\n    margin-bottom: 80px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    min-width: 632px;\n    min-height: 65px;\n    font-size: 32px;\n    margin-top: 77px;\n    margin-bottom: 118px;\n  }\n  &::placeholder {\n    text-align: center;\n    color: ${theme.colors.grey};\n  }\n`;\nconst ButtonSubmit = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 45px;\n  font-size: 18px;\n  font-weight: 400;\n  border-radius: 6px;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.darkGreen};\n  @media screen and (min-width: ${theme.breakpoints.tablet}) {\n    min-width: 432px;\n    min-height: 65px;\n    font-size: 28px;\n  }\n  @media screen and (min-width: ${theme.breakpoints.desktop}) {\n    min-width: 632px;\n    min-height: 65px;\n    font-size: 32px;\n  }\n`;\n\nexport {\n  AvtorizationSection,\n  AvtorizationContainer,\n  AvtorizationFormItem,\n  Titleline,\n  Input,\n  ButtonSubmit,\n};\n","import { useState } from 'react';\nimport {\n    AvtorizationSection, AvtorizationContainer, AvtorizationFormItem, Titleline, Input, ButtonSubmit\n  } from './AvtorizationForm.styled';\nimport { saveToStorage } from 'services/localStorService';\n\n  \n  export const AvtorizationForm = () => {\n    const [avtorization_id, setAvtorization_id] = useState('');\n\n    const handleSubmit = () => {\n        saveToStorage(\"avtorization_id\", avtorization_id);\n        setAvtorization_id('');\n    }\n\n    return (\n      <AvtorizationSection>\n        <AvtorizationContainer>\n            <AvtorizationFormItem onSubmit={handleSubmit}>\n                <Titleline for=\"avtorization_id\" aria-label=\"avtorization_id\">Авторизация</Titleline>\n                <Input type=\"text\" \n                    id=\"avtorization_id\" \n                    name=\"avtorization_id\" \n                    value={avtorization_id} \n                    placeholder=\"Введите идентификатор\"\n                    onChange={e => {setAvtorization_id(e.target.value)}}/>\n                <ButtonSubmit type=\"submit\" aria-label=\"Submit\">ВХОД</ButtonSubmit>\n            </AvtorizationFormItem>\n        </AvtorizationContainer>\n      </AvtorizationSection>\n    );\n  };\n  ","import { AvtorizationForm } from \"components/AvtorizationForm/AvtorizationForm\";\n\n\nconst AuthPage = () => {\n  return (\n<AvtorizationForm/>\n  );\n};\n\nexport default AuthPage;\n","/**\n * Saves given data, replaces old data with the new\n * @param {string} storageKey - key to save data\n * @param {Object|Object[]} dataToSave data we need to save\n */\n\nfunction saveToStorage(storageKey, dataToSave) {\n  try {\n    localStorage.setItem(storageKey, JSON.stringify(dataToSave));\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n}\n\n/**\n * Returns all data from the storage\n * @param {string} storageKey - key to returns data\n * @returns {Object} parsed data from storage\n */\n\nfunction getFromStorage(storageKey) {\n  try {\n    const data = localStorage.getItem(storageKey);\n    return data === null ? undefined : JSON.parse(data);\n  } catch (err) {\n    console.warn('Cannot parse JSON from localStorage');\n    return null;\n  }\n}\n\n/**\n * Clears some array of the data in the storage by key\n * @param {string} storageKey - key to remove the data\n */\n\nfunction removeItem(storageKey) {\n  localStorage.removeItem(storageKey);\n}\n\n/**\n * Clears all the data in the storage\n */\n\nfunction clearData() {\n  localStorage.clear();\n}\n\nexport { clearData, getFromStorage, saveToStorage, removeItem };\n"],"names":["AvtorizationSection","styled","_templateObject","_taggedTemplateLiteral","AvtorizationContainer","Container","_templateObject2","AvtorizationFormItem","_templateObject3","Titleline","_templateObject4","theme","Input","_templateObject5","ButtonSubmit","_templateObject6","AvtorizationForm","_useState","useState","_useState2","_slicedToArray","avtorization_id","setAvtorization_id","_jsx","children","_jsxs","onSubmit","saveToStorage","for","type","id","name","value","placeholder","onChange","e","target","storageKey","dataToSave","localStorage","setItem","JSON","stringify","error","console","message","removeItem"],"sourceRoot":""}